name: Build Images and Handle Uffizzi Previews.

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened,reopened,synchronize]

jobs:
  # build-wiki:
  #   name: Build and Push `wiki`
  #   runs-on: ubuntu-latest
  #   outputs:
  #     tags: ${{ steps.meta.outputs.tags }}
  #   steps:
  #     - name: Set Build Variables
  #       run: |
  #         if [[ "$GITHUB_REF" =~ ^refs/tags/v* ]]; then
  #           echo "Using TAG mode: $GITHUB_REF_NAME"
  #           echo "REL_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV
  #           echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV
  #         else
  #           echo "Using BRANCH mode: v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER"
  #           echo "REL_VERSION=v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
  #           echo "REL_VERSION_STRICT=$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
  #         fi
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Checkout git repo
  #       uses: actions/checkout@v3
  #     - name: Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: ghcr.io/${{ github.repository_owner }}/requarks-wiki-${{ env.REL_VERSION_STRICT }}
  #     - name: Build and Push Image to GHCR
  #       uses: docker/build-push-action@v2.9.0
  #       with:
  #         context: .
  #         file: dev/build/Dockerfile
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         push: true

  render-compose-file:
    name: Render Docker Compose File
    runs-on: ubuntu-latest
    # needs: 
    #   - build-wiki
    outputs:
      compose-file-cache-key: ${{ steps.hash.outputs.hash }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Render Compose File
        run: |
          # WIKI_IMAGE=$(echo ${{ needs.build-wiki.outputs.tags }})
          # export WIKI_IMAGE
          # remove comments from .env.example
          export $(grep -o '^[^#]*' docker/uffizzi/.env.example | xargs)
          # Render simple template from environment variables.
          envsubst < docker/uffizzi/docker-compose.yml > docker/uffizzi/docker-compose.rendered.yml
          cat docker/uffizzi/docker-compose.rendered.yml

      - name: Hash Rendered Compose File
        id: hash
        run: echo "::set-output name=hash::$(md5sum docker/uffizzi/docker-compose.rendered.yml | awk '{ print $1 }')"
      - name: Cache Rendered Compose File
        uses: actions/cache@v3
        with:
          path: docker/uffizzi/docker-compose.rendered.yml
          key: ${{ steps.hash.outputs.hash }}

  deploy-uffizzi-preview:
    name: Use Remote Workflow to Preview on Uffizzi
    needs: render-compose-file
    uses: UffizziCloud/preview-action/.github/workflows/reusable.yaml@add_credentials
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    with:
      compose-file-cache-key: ${{ needs.render-compose-file.outputs.compose-file-cache-key }}
      compose-file-cache-path:  docker/uffizzi/docker-compose.rendered.yml
      username: vibhav.bobade+supabase@uffizzi.com
      server: https://app.uffizzi.com
      project: supabase-13w7
    secrets:
      password: ${{ secrets.UFFIZZI_PASSWORD }}
    permissions:
      contents: read
      pull-requests: write